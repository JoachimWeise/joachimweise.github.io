<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Joachim Weise</title>
    <link>https://joachimweise.github.io/tags/python/</link>
    <description>Recent content in python on Joachim Weise</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>youremail@domain.com (Joachim Weise)</managingEditor>
    <webMaster>youremail@domain.com (Joachim Weise)</webMaster>
    <lastBuildDate>Wed, 25 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://joachimweise.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Converting LaTeX to Markdown</title>
      <link>https://joachimweise.github.io/post/2020-03-25-regex/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Joachim Weise)</author>
      <guid>https://joachimweise.github.io/post/2020-03-25-regex/</guid>
      <description>&lt;p&gt;I&#39;m usually writing my notes on physics and mathematics, e.g. the ongoing series of posts on Riemannian geometry, in &lt;span  class=&#34;math&#34;&gt;\(\LaTeX\)&lt;/span&gt; documents, as probably most people do. For the purpose of this blog I regularly need to convert parts of these documents into markdown that Hugo can understand. Since I haven&#39;t found any better solution yet I decided to develop a set of regular expressions in Python that do the job pretty well. I normally run the code in a Jupyter notebook that allows me to check the quality of conversion immediately and do some minor tweaking if required.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ultrasonic Range Sensor on the Raspberry Pi</title>
      <link>https://joachimweise.github.io/post/2019-12-25-ultrasonic-sensor-raspi/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Joachim Weise)</author>
      <guid>https://joachimweise.github.io/post/2019-12-25-ultrasonic-sensor-raspi/</guid>
      <description>&lt;p&gt;In this project I am interfacing the HC-SR04 ultrasonic sensor module to a Raspberry Pi to measure distance. Later on the Raspberry as well as the sensor will be part of an obstacle avoiding robot. I use my oscilloscope to check whether the sensor is working as announced.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AI weekly (51/2019)</title>
      <link>https://joachimweise.github.io/post/2019-12-21-ai-weekly-51-2019/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Joachim Weise)</author>
      <guid>https://joachimweise.github.io/post/2019-12-21-ai-weekly-51-2019/</guid>
      <description>&lt;p&gt;+++ Facebook has a neural network that can do advanced math +++ Google’s AI can identify wildlife from trap-camera footage with up to 98.6% accuracy +++ Intel acquires AI chip startup Habana Labs for $2 billion +++ eBay open-sources AI platform Krylov +++ AI experts urge machine learning researchers to tackle climate change +++ Top 10 Python libraries of 2019 +++&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python virtual environments</title>
      <link>https://joachimweise.github.io/post/2019-11-16-python-environments/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Joachim Weise)</author>
      <guid>https://joachimweise.github.io/post/2019-11-16-python-environments/</guid>
      <description>&lt;p&gt;Anyone who works on Python projects and uses various packages will sooner or later have to deal with different versions of packages across different branches and projects. Because each project has its own set of dependencies, it’s a good practice to avoid mixing them. If all the dependencies are installed together in a single Python environment, then it will be difficult to discern where each one came from. In the worst cases, two different projects may depend on two different versions of a package, but with Python you can only have one version of a package installed at one time. What a mess! Virtual environments address this issue. A virtual environment, put simply, is an isolated working copy of Python which allows you to work on a specific project without worry of affecting other projects.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Image Manipulation with Python Pillow</title>
      <link>https://joachimweise.github.io/post/2019-10-27-python-pillow/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      <author>youremail@domain.com (Joachim Weise)</author>
      <guid>https://joachimweise.github.io/post/2019-10-27-python-pillow/</guid>
      <description>&lt;p&gt;Normally I use &lt;a href=&#34;https://www.gimp.org/&#34;&gt;GIMP&lt;/a&gt; when I need to resize, crop or retouch images in various ways. However, for my last &lt;a href=&#34;https://joachimweise.github.io/post/2019-10-19-first-post/&#34;&gt;post&lt;/a&gt; on the Berlin Festival of Light I would have had to manually resize and crop a whole bunch of images at a time. That&#39;s why I took a look how Python could help with this task, and found PIL, the Python Imaging Library, in newer versions known as &lt;a href=&#34;https://python-pillow.org/&#34;&gt;Pillow&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>